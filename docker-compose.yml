version: '3.8'

networks:
  app-network:
    driver: bridge

services:
  # Nginx Reverse Proxy
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: nginx-proxy
    ports:
      - "8080:80"
    depends_on:
      service1:
        condition: service_healthy
      service2:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./logs:/var/log/nginx
    restart: unless-stopped

  # Go Application (Service 1)
  service1:
    build:
      context: ./service_1
      dockerfile: Dockerfile
    container_name: go-service
    expose:
      - "8001"
    networks:
      - app-network
    environment:
      - PORT=8001
      - ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped

  # Python Application (Service 2)
  service2:
    build:
      context: ./service_2
      dockerfile: Dockerfile
    container_name: python-service
    expose:
      - "8002"
    networks:
      - app-network
    environment:
      - PORT=8002
      - ENV=production
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    restart: unless-stopped

volumes:
  logs: