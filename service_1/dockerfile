# Multi-stage build for Go application using Ubuntu
FROM ubuntu:22.04 AS builder

# Install Go
RUN apt-get update && apt-get install -y \
    golang-go \
    git \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Copy go files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -ldflags '-extldflags "-static"' -o main .

# Final stage - use minimal ubuntu
FROM ubuntu:22.04

# Install minimal dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    wget \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

WORKDIR /app

# Copy the binary from builder stage
COPY --from=builder /app/main .

# Create non-root user
RUN useradd -r -u 1001 appuser
RUN chown appuser:appuser /app/main
USER appuser

# Expose port
EXPOSE 8001

# Health check using wget instead of curl
HEALTHCHECK --interval=30s --timeout=3s --start-period=15s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8001/health || exit 1

# Run the binary
CMD ["./main"]